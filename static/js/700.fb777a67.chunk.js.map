{"version":3,"file":"static/js/700.fb777a67.chunk.js","mappings":"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","sources":["Api/Api.jsx","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'a7cfffa58e55699501e5099e5e220905';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?api_key=${KEY}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/all/day';\n\nasync function fetchTrends() {\n  try {\n    const response = await axios.get(`${BASE_URL_TREND}?api_key=${KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchByID(id) {\n  try {\n    const response = await axios.get(`${BASE_URL_ID}${id}?api_key=${KEY}`);\n\n    return response.data;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_CAST}${id}/credits?api_key=${KEY}`\n    );\n\n    return response.data.cast.slice(0, 6);\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_REVIEW = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_REVIEW}${id}/reviews?api_key=${KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nexport { fetchMovies, fetchTrends, fetchByID, fetchCast, fetchReview };\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  padding-top: 40px;\n  margin-bottom: 56px;\n`;\nexport const InfoWrapper = styled.div`\n  margin-left: 76px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const InfoThumb = styled.div`\n  width: 50%;\n  padding-top: 20px;\n  margin-bottom: 90px;\n`;\n\nexport const InfoTitle = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const InfoTag = styled.p`\n  margin-bottom: 24px;\n  font-style: italic;\n  font-size: large;\n`;\n\nexport const InfoVote = styled.p`\n  margin-bottom: 16px;\n  font-weight: bold;\n  font-size: large;\n`;\n\nexport const InfoListThumb = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n  font-weight: bold;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n`;\n\nexport const InfoGenres = styled.p`\n  font-size: large;\n  margin-right: 20px;\n`;\n\nexport const InfoItem = styled.li`\n  font-size: large;\n  margin-right: 16px;\n  &:last-child {\n    margin: 0;\n  }\n`;\n\nexport const OwerviewTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 24px;\n`;\n\nexport const OwerviewText = styled.p`\n  text-align: center;\n  font-size: large;\n  line-height: 24px;\n  letter-spacing: 0.04em;\n`;\nexport const MoreWrapper = styled.div`\n  margin-bottom: 64px;\n  text-align: center;\n  font-size: large;\n  line-height: 24px;\n  letter-spacing: 0.04em;\n`;\nexport const MoreTitle = styled.h3`\n  margin-bottom: 24px;\n`;\nexport const MoreLink = styled(NavLink)`\n  font-size: x-large;\n  color: inherit;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    transform: color;\n    color: white;\n  }\n  & + & {\n    margin-left: 50px;\n  }\n  &.active {\n    color: white;\n  }\n`;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchByID } from 'Api/Api';\nimport { GrClose } from 'react-icons/gr';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  Wrapper,\n  InfoThumb,\n  InfoTitle,\n  InfoTag,\n  InfoVote,\n  InfoListThumb,\n  InfoList,\n  InfoGenres,\n  InfoItem,\n  OwerviewTitle,\n  OwerviewText,\n  MoreWrapper,\n  MoreTitle,\n  MoreLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setLoading(true);\n    fetchByID(movieId).then(response => {\n      setCurrentMovie(response);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (!currentMovie) {\n    return;\n  }\n  const { title, poster_path, vote_average, tagline, overview, genres } =\n    currentMovie;\n  return (\n    <>\n      {loading && <Loader />}{' '}\n      <Wrapper>\n        {currentMovie && (\n          <>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={`${title}`}\n              />\n            </div>\n\n            <InfoThumb>\n              <InfoTitle>{title}</InfoTitle>\n              <InfoTag>{tagline}</InfoTag>\n              <InfoVote>\n                <span>User Score:</span> {`${vote_average.toFixed(1)}`}\n              </InfoVote>\n              <InfoListThumb>\n                <InfoGenres>Genres:</InfoGenres>\n                <InfoList>\n                  {genres.map(({ id, name }) => (\n                    <InfoItem key={id}>{name}</InfoItem>\n                  ))}\n                </InfoList>\n              </InfoListThumb>\n              <OwerviewTitle>Overwiew</OwerviewTitle>\n              <OwerviewText>{overview}</OwerviewText>\n            </InfoThumb>\n            <NavLink to={backLinkHref}>\n              <GrClose className=\"icon\" />\n            </NavLink>\n          </>\n        )}\n      </Wrapper>\n      <MoreWrapper>\n        <MoreTitle>Show more information</MoreTitle>\n        <MoreLink to=\"cast\">Cast</MoreLink>\n        <MoreLink to=\"reviews\">Reviews</MoreLink>\n      </MoreWrapper>\n      <Outlet />\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;","import { Puff } from 'react-loader-spinner';\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderThumb>\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radisu={1}\n      color=\"cadetblue\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </LoaderThumb>\n);\n\nexport { Loader };"],"names":["BASE_URL","KEY","fetchMovies","query","page","axios","response","data","results","toast","BASE_URL_TREND","fetchTrends","BASE_URL_ID","fetchByID","id","BASE_URL_CAST","fetchCast","cast","slice","BASE_URL_REVIEW","fetchReview","Wrapper","styled","InfoThumb","InfoTitle","InfoTag","InfoVote","InfoListThumb","InfoList","InfoGenres","InfoItem","OwerviewTitle","OwerviewText","MoreWrapper","MoreTitle","MoreLink","NavLink","useState","currentMovie","setCurrentMovie","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","then","title","poster_path","vote_average","tagline","overview","genres","Loader","src","alt","toFixed","map","name","to","className","LoaderThumb","height","width","radisu","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}