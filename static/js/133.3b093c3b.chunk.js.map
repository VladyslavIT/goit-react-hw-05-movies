{"version":3,"file":"static/js/133.3b093c3b.chunk.js","mappings":"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","sources":["Api/Api.jsx","Pages/Home/Home.styled.jsx","Pages/Home/Home.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'a7cfffa58e55699501e5099e5e220905';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?api_key=${KEY}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/all/day';\n\nasync function fetchTrends() {\n  try {\n    const response = await axios.get(`${BASE_URL_TREND}?api_key=${KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchByID(id) {\n  try {\n    const response = await axios.get(`${BASE_URL_ID}${id}?api_key=${KEY}`);\n\n    return response.data;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_CAST}${id}/credits?api_key=${KEY}`\n    );\n\n    return response.data.cast.slice(0, 6);\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_REVIEW = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_REVIEW}${id}/reviews?api_key=${KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nexport { fetchMovies, fetchTrends, fetchByID, fetchCast, fetchReview };\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  color: midnightblue;\n`;\n\nexport const TrendList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n\nexport const TrendItem = styled.li`\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchTrends } from 'Api/Api';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Title, TrendList, TrendItem } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovie, setTrendingMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchTrends().then(response => {\n      setTrendingMovie(response);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Today</Title>\n      {loading && <Loader />}\n      <TrendList>\n        {trendingMovie.map(({ id, title, poster_path }) => (\n          <TrendItem key={id}>\n            <NavLink key={id} to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={`${title}`}\n              />\n            </NavLink>\n          </TrendItem>\n        ))}\n      </TrendList>\n      <Outlet />\n    </>\n  );\n};\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;","import { Puff } from 'react-loader-spinner';\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderThumb>\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radisu={1}\n      color=\"cadetblue\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </LoaderThumb>\n);\n\nexport { Loader };"],"names":["BASE_URL","KEY","fetchMovies","query","page","axios","response","data","results","toast","BASE_URL_TREND","fetchTrends","BASE_URL_ID","fetchByID","id","BASE_URL_CAST","fetchCast","cast","slice","BASE_URL_REVIEW","fetchReview","Title","styled","TrendList","TrendItem","useState","trendingMovie","setTrendingMovie","loading","setLoading","location","useLocation","useEffect","then","Loader","map","title","poster_path","to","state","from","src","alt","LoaderThumb","height","width","radisu","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}