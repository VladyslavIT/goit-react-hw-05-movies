{"version":3,"file":"static/js/832.5926952a.chunk.js","mappings":"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","sources":["Api/Api.jsx","Pages/Cast/Cast.styled.jsx","Pages/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'a7cfffa58e55699501e5099e5e220905';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?api_key=${KEY}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/all/day';\n\nasync function fetchTrends() {\n  try {\n    const response = await axios.get(`${BASE_URL_TREND}?api_key=${KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchByID(id) {\n  try {\n    const response = await axios.get(`${BASE_URL_ID}${id}?api_key=${KEY}`);\n\n    return response.data;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_CAST}${id}/credits?api_key=${KEY}`\n    );\n\n    return response.data.cast.slice(0, 6);\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_REVIEW = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_REVIEW}${id}/reviews?api_key=${KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nexport { fetchMovies, fetchTrends, fetchByID, fetchCast, fetchReview };\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.div`\n  display: flex;\n  list-style: none;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const CastRole = styled.span`\n  margin-left: 10px;\n  font-style: italic;\n`;\n\nexport const NotCast = styled.p`\n  text-align: center;\n  font-size: larger;\n  margin-bottom: 24px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'Api/Api';\nimport notFound from '../../notFound.png';\n\nimport { CastList, CastRole, NotCast } from './Cast.styled';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchCast(movieId).then(response => {\n      setMovieCast(response);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  const defaultPhoto = profile_path => {\n    if (!profile_path) {\n      return `${notFound}`;\n    }\n    return `https://image.tmdb.org/t/p/w500/${profile_path}`;\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movieCast.length > 0 ? (\n        <CastList>\n          {movieCast.map(({ id, character, name, profile_path }) => (\n            <li key={id}>\n              <img\n                width={200}\n                height={300}\n                src={`${defaultPhoto(profile_path)}`}\n                alt={`${name}`}\n              />\n              <h3>{name}</h3>\n              <p>\n                as<CastRole>{character}</CastRole>\n              </p>\n            </li>\n          ))}\n        </CastList>\n      ) : (\n        <NotCast>\n          Sorry, we didn't find any information about this movie.\n        </NotCast>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired\n}\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;","import { Puff } from 'react-loader-spinner';\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderThumb>\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radisu={1}\n      color=\"cadetblue\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </LoaderThumb>\n);\n\nexport { Loader };"],"names":["KEY","BASE_URL_TREND","fetchTrends","axios","response","data","results","toast","BASE_URL_ID","fetchByID","id","BASE_URL_CAST","fetchCast","cast","slice","BASE_URL_REVIEW","fetchReview","CastList","styled","CastRole","NotCast","useState","movieCast","setMovieCast","loading","setLoading","movieId","useParams","useEffect","then","defaultPhoto","profile_path","notFound","Loader","length","map","character","name","width","height","src","alt","LoaderThumb","radisu","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}