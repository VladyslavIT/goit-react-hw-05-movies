{"version":3,"file":"static/js/285.22e40efc.chunk.js","mappings":"4TAGMA,EAAW,4CACXC,EAAM,mCAAZ,SAEeC,EAAY,EAAZA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,EAAOC,GAAlC,gGAE2BC,EAAAA,GAAAA,IAAA,UAClBL,EADkB,oBACEC,EADF,kBACeE,EADf,iBAC6BC,IAHxD,cAEUE,EAFV,yBAMWA,EAASC,KAAKC,SANzB,gCAQIC,EAAAA,GAAAA,MAAY,8BARhB,gFAYA,IAAMC,EAAiB,gDAAvB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BN,EAAAA,GAAAA,IAAA,UAAaK,EAAb,oBAAuCT,IAFlE,cAEUK,EAFV,yBAIWA,EAASC,KAAKC,SAJzB,gCAMIC,EAAAA,GAAAA,MAAY,8BANhB,gFAUA,IAAMG,EAAc,sCAApB,SAEeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAE2BT,EAAAA,GAAAA,IAAA,UAAaO,GAAb,OAA2BE,EAA3B,oBAAyCb,IAFpE,cAEUK,EAFV,yBAIWA,EAASC,MAJpB,gCAMIE,EAAAA,GAAAA,MAAY,8BANhB,gFAUA,IAAMM,EAAgB,sCAAtB,SAEeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBF,GAAzB,gGAE2BT,EAAAA,GAAAA,IAAA,UAClBU,GADkB,OACFD,EADE,4BACoBb,IAH/C,cAEUK,EAFV,yBAMWA,EAASC,KAAKU,KAAKC,MAAM,EAAG,IANvC,gCAQIT,EAAAA,GAAAA,MAAY,8BARhB,gFAYA,IAAMU,EAAkB,sCAAxB,SAEeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BN,GAA3B,gGAE2BT,EAAAA,GAAAA,IAAA,UAClBc,GADkB,OACAL,EADA,4BACsBb,IAHjD,cAEUK,EAFV,yBAMWA,EAASC,KAAKC,SANzB,gCAQIC,EAAAA,GAAAA,MAAY,8BARhB,gF,sJCxDaY,EAAcC,EAAAA,EAAAA,GAAH,+CAGXC,EAAcD,EAAAA,EAAAA,GAAH,sEAKXE,EAAaF,EAAAA,EAAAA,EAAH,yEAIVG,EAAYH,EAAAA,EAAAA,EAAH,6FAMTI,EAAaJ,EAAAA,EAAAA,EAAH,4C,SCsCvB,EA3CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXX,EAAAA,EAAAA,IAAYY,GAASG,MAAK,SAAA7B,GACxBuB,EAAWvB,GACXyB,GAAW,EACZ,GACF,GAAE,CAACC,IAECJ,EAIL,OACE,gCACGE,IAAW,SAACM,EAAA,EAAD,IACXR,EAAQS,OAAS,GAChB,SAAChB,EAAD,UACGO,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAY3B,EAAhC,EAAgCA,GAAhC,OACX,2BACE,SAACS,EAAD,UAAcgB,KACd,SAACf,EAAD,UAAagB,KACb,SAACd,EAAD,UACG,IAAIgB,KAAKD,GAAYE,yBAJjB7B,EADE,OAWf,SAACW,EAAD,iDAIP,C,gFClDYmB,E,QAActB,EAAAA,IAAH,qH,SCClBc,EAAS,kBACb,SAACQ,EAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAQ,EACRC,MAAM,YACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAVA,C","sources":["Api/Api.jsx","Pages/Reviews/Reviews.styled.jsx","Pages/Reviews/Reviews.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'a7cfffa58e55699501e5099e5e220905';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?api_key=${KEY}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/all/day';\n\nasync function fetchTrends() {\n  try {\n    const response = await axios.get(`${BASE_URL_TREND}?api_key=${KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchByID(id) {\n  try {\n    const response = await axios.get(`${BASE_URL_ID}${id}?api_key=${KEY}`);\n\n    return response.data;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_CAST}${id}/credits?api_key=${KEY}`\n    );\n\n    return response.data.cast.slice(0, 6);\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_REVIEW = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_REVIEW}${id}/reviews?api_key=${KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nexport { fetchMovies, fetchTrends, fetchByID, fetchCast, fetchReview };\n","import styled from '@emotion/styled';\n\nexport const ReviewThumb = styled.ul`\n margin-bottom: 24px;\n`;\nexport const ReviewTitle = styled.h3`\n  padding-left: 24px;\n  margin-bottom: 8px;\n`;\n\nexport const ReviewText = styled.p`\n  line-height: 24px;\n  letter-spacing: 0.04em;\n`;\nexport const NotReview = styled.p`\n  text-align: center;\n  font-size: larger;\n  margin-bottom: 24px;\n`;\n\nexport const ReviewTime = styled.p`\n  text-align: end;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from 'Api/Api';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  ReviewThumb,\n  ReviewTitle,\n  ReviewText,\n  NotReview,\n  ReviewTime,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchReview(movieId).then(response => {\n      setReviews(response);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length > 0 ? (\n        <ReviewThumb>\n          {reviews.map(({ author, content, created_at, id }) => (\n            <li key={id}>\n              <ReviewTitle>{author}</ReviewTitle>\n              <ReviewText>{content}</ReviewText>\n              <ReviewTime>\n                {new Date(created_at).toLocaleDateString()}\n              </ReviewTime>\n            </li>\n          ))}\n        </ReviewThumb>\n      ) : (\n        <NotReview>Sorry, there are no reviews yet.</NotReview>\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;","import { Puff } from 'react-loader-spinner';\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderThumb>\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radisu={1}\n      color=\"cadetblue\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </LoaderThumb>\n);\n\nexport { Loader };"],"names":["BASE_URL","KEY","fetchMovies","query","page","axios","response","data","results","toast","BASE_URL_TREND","fetchTrends","BASE_URL_ID","fetchByID","id","BASE_URL_CAST","fetchCast","cast","slice","BASE_URL_REVIEW","fetchReview","ReviewThumb","styled","ReviewTitle","ReviewText","NotReview","ReviewTime","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","then","Loader","length","map","author","content","created_at","Date","toLocaleDateString","LoaderThumb","height","width","radisu","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}