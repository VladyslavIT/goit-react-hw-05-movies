{"version":3,"file":"static/js/827.94446d92.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","Pages/Movies/Movies.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'a7cfffa58e55699501e5099e5e220905';\n\nasync function fetchMovies(query, page) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?api_key=${KEY}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/all/day';\n\nasync function fetchTrends() {\n  try {\n    const response = await axios.get(`${BASE_URL_TREND}?api_key=${KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchByID(id) {\n  try {\n    const response = await axios.get(`${BASE_URL_ID}${id}?api_key=${KEY}`);\n\n    return response.data;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_CAST}${id}/credits?api_key=${KEY}`\n    );\n\n    return response.data.cast.slice(0, 6);\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nconst BASE_URL_REVIEW = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL_REVIEW}${id}/reviews?api_key=${KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Oops, something went wrong');\n  }\n}\n\nexport { fetchMovies, fetchTrends, fetchByID, fetchCast, fetchReview };\n","import styled from '@emotion/styled';\n\nexport const SearchTitle = styled.h1`\n  text-align: center;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  color: midnightblue;\n`;\n\nexport const SearchList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n\nexport const SearchItem = styled.li`\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\n\nimport { SearchTitle, SearchList, SearchItem } from './SearchMovie.styled';\n\nconst SearchMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <SearchTitle>Movies found</SearchTitle>\n      <SearchList>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <SearchItem key={id}>\n            <NavLink key={id} to={`${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={`${original_title}`}\n              />\n            </NavLink>\n          </SearchItem>\n        ))}\n      </SearchList>\n      <Outlet />\n    </>\n  );\n};\n\nSearchMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport { SearchMovie };\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 36px;\n`;\n\nexport const Input = styled.input`\n  width: 35%;\n  height: 36px;\n  font-size: large;\n  border: none;\n  border-radius: 8px;\n  outline: none;\n  &::placeholder {\n    font-size: medium;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 8px;\n  border: none;\n  margin-left: 12px;\n  color: white;\n  background-color: cadetblue;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: background-color;\n    color: greenyellow;\n  }\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { fetchMovies } from 'Api/Api';\nimport { toast } from 'react-toastify';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nconst Searchbar = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParams = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (filterParams.trim() === '') {\n      setMovies([]);\n    }\n  }, [filterParams]);\n\n\n// Делает запрос, когда пользователь переш по ссылке на фильм\n  // useEffect(() => {\n  //   if (filterParams) {\n  //     setLoading(true);\n  //     fetchMovies(filterParams).then(response => {\n  //       if (response.length === 0) {\n  //         toast.error('Please enter another movie title');\n  //         setLoading(false);\n  //         return;\n  //       }\n  //       setMovies(response);\n  //       setLoading(false);\n  //     });\n  //   }\n  // }, []);\n\n  const handleQueryChange = event => {\n    const { value } = event.currentTarget;\n    setQuery(value.toLowerCase());\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query === '') {\n      toast.error('Please enter a movie title');\n      return;\n    }\n    setLoading(true);\n    fetchMovies(query).then(response => {\n      if (response.length === 0) {\n        toast.error('Please enter another movie title');\n        setLoading(false);\n        return;\n      }\n      setMovies(response);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={filterParams}\n          onChange={handleQueryChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">\n          <span>Search</span>\n        </Button>\n      </Form>\n      {loading && <Loader />}\n      {movies.length > 0 && <SearchMovie movies={movies} />}\n    </>\n  );\n};\n\nexport { Searchbar };\n","import { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  return (\n    <>\n      <Searchbar />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;","import { Puff } from 'react-loader-spinner';\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderThumb>\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radisu={1}\n      color=\"cadetblue\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </LoaderThumb>\n);\n\nexport { Loader };"],"names":["BASE_URL","KEY","fetchMovies","query","page","axios","response","data","results","toast","BASE_URL_TREND","fetchTrends","BASE_URL_ID","fetchByID","id","BASE_URL_CAST","fetchCast","cast","slice","BASE_URL_REVIEW","fetchReview","SearchTitle","styled","SearchList","SearchItem","SearchMovie","movies","location","useLocation","map","original_title","poster_path","to","state","from","src","alt","Form","Input","Button","Searchbar","useState","setQuery","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","filterParams","get","useEffect","trim","onSubmit","event","preventDefault","then","length","type","name","value","onChange","currentTarget","toLowerCase","filter","autoComplete","autoFocus","placeholder","Loader","LoaderThumb","height","width","radisu","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}